{"ast":null,"code":"import openaiService from './openaiService';\nimport axios from 'axios';\n\n// Backend prediction endpoint\nconst BACKEND_URL = 'https://luminari-uic-skin-disease-detection.hf.space/predict/';\n\n// In-memory protocol storage for listProtocols\nconst protocolHistory = [];\nconst apiService = {\n  generateProtocol: async diseaseData => {\n    try {\n      const result = await openaiService.generateProtocol(diseaseData);\n      protocolHistory.push({\n        protocol_id: result.protocol_id,\n        disease_name: diseaseData.disease_name,\n        generation_date: new Date().toISOString(),\n        protocol_type: \"Phase 2\"\n      });\n      return result;\n    } catch (error) {\n      console.error('Error generating protocol:', error);\n      throw error;\n    }\n  },\n  generateIndModule: openaiService.generateIndModule,\n  queryAssistant: openaiService.queryAssistant,\n  listProtocols: async () => {\n    return protocolHistory;\n  },\n  predictSkinDisease: async formData => {\n    try {\n      const response = await axios.post(BACKEND_URL, formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Prediction API error:', error);\n      throw error;\n    }\n  }\n};\nexport default apiService;","map":{"version":3,"names":["openaiService","axios","BACKEND_URL","protocolHistory","apiService","generateProtocol","diseaseData","result","push","protocol_id","disease_name","generation_date","Date","toISOString","protocol_type","error","console","generateIndModule","queryAssistant","listProtocols","predictSkinDisease","formData","response","post","headers","data"],"sources":["/Users/tanishqpadwal/Desktop/luminari fe/skin-disease-frontend/src/services/api.js"],"sourcesContent":["import openaiService from './openaiService';\nimport axios from 'axios';\n\n// Backend prediction endpoint\nconst BACKEND_URL = 'https://luminari-uic-skin-disease-detection.hf.space/predict/';\n\n// In-memory protocol storage for listProtocols\nconst protocolHistory = [];\n\nconst apiService = {\n  generateProtocol: async (diseaseData) => {\n    try {\n      const result = await openaiService.generateProtocol(diseaseData);\n      protocolHistory.push({\n        protocol_id: result.protocol_id,\n        disease_name: diseaseData.disease_name,\n        generation_date: new Date().toISOString(),\n        protocol_type: \"Phase 2\"\n      });\n      return result;\n    } catch (error) {\n      console.error('Error generating protocol:', error);\n      throw error;\n    }\n  },\n\n  generateIndModule: openaiService.generateIndModule,\n\n  queryAssistant: openaiService.queryAssistant,\n\n  listProtocols: async () => {\n    return protocolHistory;\n  },\n\n  predictSkinDisease: async (formData) => {\n    try {\n      const response = await axios.post(BACKEND_URL, formData, {\n        headers: { 'Content-Type': 'multipart/form-data' }\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Prediction API error:', error);\n      throw error;\n    }\n  }\n};\n\nexport default apiService;\n"],"mappings":"AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,MAAMC,WAAW,GAAG,+DAA+D;;AAEnF;AACA,MAAMC,eAAe,GAAG,EAAE;AAE1B,MAAMC,UAAU,GAAG;EACjBC,gBAAgB,EAAE,MAAOC,WAAW,IAAK;IACvC,IAAI;MACF,MAAMC,MAAM,GAAG,MAAMP,aAAa,CAACK,gBAAgB,CAACC,WAAW,CAAC;MAChEH,eAAe,CAACK,IAAI,CAAC;QACnBC,WAAW,EAAEF,MAAM,CAACE,WAAW;QAC/BC,YAAY,EAAEJ,WAAW,CAACI,YAAY;QACtCC,eAAe,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;QACzCC,aAAa,EAAE;MACjB,CAAC,CAAC;MACF,OAAOP,MAAM;IACf,CAAC,CAAC,OAAOQ,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAEDE,iBAAiB,EAAEjB,aAAa,CAACiB,iBAAiB;EAElDC,cAAc,EAAElB,aAAa,CAACkB,cAAc;EAE5CC,aAAa,EAAE,MAAAA,CAAA,KAAY;IACzB,OAAOhB,eAAe;EACxB,CAAC;EAEDiB,kBAAkB,EAAE,MAAOC,QAAQ,IAAK;IACtC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAACrB,WAAW,EAAEmB,QAAQ,EAAE;QACvDG,OAAO,EAAE;UAAE,cAAc,EAAE;QAAsB;MACnD,CAAC,CAAC;MACF,OAAOF,QAAQ,CAACG,IAAI;IACtB,CAAC,CAAC,OAAOV,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeX,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}